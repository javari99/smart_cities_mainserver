<section class="min-h-screen w-full flex flex-col divide-y divide-indigo-600">
    <!--Video surveillance-->
    <div class="mb-5 w-full">
        <div class="flex justify-center my-5">
            <h1 class="font-extrabold text-4xl tracking-tight text-gray-800">Surveillance</h1>
        </div>
        <div class="w-full md:w-4/5 lg:w-3/4 xl:w-2/3 bg-gray-100 mx-auto">
            <canvas id="cameraSurveillance" style="width: 100%;"></canvas>
        </div>
    </div>
    <!--Suggestions table-->
    <div class="w-full my-5">
        <div class="flex justify-center my-5">
            <h1 class="font-extrabold text-4xl tracking-tight text-gray-800">Suggestions</h1>
        </div>
        <div class="mx-auto w-full sm:w-2/3 sm:mx-auto">
            <div class="bg-white shadow-md rounded mt-6 overflow-auto max-h-80">
                <table class="text-left w-full border-collapse table-auto">
                    <thead class="bg-indigo-200">
                        <tr>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-gray-800 border-b border-gray-600">
                                ID</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-gray-800 border-b border-gray-600">
                                Username</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-gray-800 border-b border-gray-600">
                                Message</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-gray-800 border-b border-gray-600">
                                Rating</th>
                        </tr>
                    </thead>
                    <tbody id="suggestionsTableBody">
                        {{#each suggestionsList}}
                        <tr class="hover:bg-gray-100">
                            <td class="py-4 px-6 border-b font-bold">{{this.id}}</td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.username}}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.suggestion}}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800 font-bold py-1 px-3 rounded">{{this.rating}}/10</p>
                            </td>
                        </tr>
                        {{else}}
                        <tr class="hover:bg-gray-100">
                            <td class="py-4 px-6 border-b" colspan="3">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">No suggestions have been made yet.
                                </p>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
            <!-- Suggestions table controls -->
            <div class="flex flex-row">
                <button onclick="prevSuggestionsPage()"
                    class="font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-l">&lt;
                    Prev</button>
                <button onclick="refreshSuggestionsPage()" id="currentSuggestionsPageField"
                    class="font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 border-l border-r border-indigo-400">0</button>
                <button onclick="nextSuggestionsPage()"
                    class="font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r">Next
                    &gt;</button>
            </div>
        </div>
    </div>
    <div class="w-full flex flex-col justify-center">
        <div class="flex justify-center my-5">
            <h1 class="font-extrabold text-4xl tracking-tight text-gray-800">Records</h1>
        </div>
        <!--TODO: implement graphs ???-->
        <div class="mx-auto w-full sm:w-2/3 sm:mx-auto" id="Graphs">
        </div>
        <!--Records Table-->
        <div class="mx-auto w-full sm:w-2/3 sm:mx-auto mb-10">
            <div class="bg-white shadow-md rounded mt-6 overflow-auto max-h-96">
                <table class="text-left w-full border-collapse table-auto">
                    <thead class="bg-indigo-200">
                        <tr>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-gray-800 border-b border-gray-600">
                                ID</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-grey-dark border-b border-gray-600">
                                Mote ID</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-grey-dark border-b border-gray-600">
                                Timestamp</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-grey-dark border-b border-gray-600">
                                Light</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-grey-dark border-b border-gray-600">
                                Temperature</th>
                            <th class="py-4 px-6  font-bold uppercase text-sm text-grey-dark border-b border-gray-600">
                                Led Level</th>
                        </tr>
                    </thead>
                    <tbody id="recordsTableBody">
                        {{#each recordsList}}
                        <tr class="hover:bg-gray-100">
                            <td class="py-4 px-6 border-b font-bold">{{this.id}}</td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.mote_id}}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.timestamp}}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.light}}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.temperature}}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">{{this.ledlevel}}</p>
                            </td>
                        </tr>
                        {{else}}
                        <tr class="hover:bg-gray-100">
                            <td class="py-4 px-6 border-b" colspan="6">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">No records have been received yet
                                </p>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
            <!-- Records table controls -->
            <div class="flex flex-row">
                <button onclick="prevRecordsPage()"
                    class="font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-l">&lt;
                    Prev</button>
                <button onclick="refreshRecordsPage()" id="currentRecordsPageField"
                    class="font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 border-l border-r border-indigo-400">0</button>
                <button onclick="nextRecordsPage()"
                    class="font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r">Next
                    &gt;</button>
            </div>
            <div class="my-5">
                {{#each distincMotes}}
                    <div class="flex flex-wrap my-2 py-2 px-2">
                        <div class="font-bold bg-indigo-100 px-5 py-2 rounded-r">Mote {{this.mote_id}}</div>
                        <button onclick="PostLedLevel({{this.mote_id}}, 0)" class="mx-auto font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r border-l border-r border-indigo-400">Level 0</button>
                        <button onclick="PostLedLevel({{this.mote_id}}, 1)" class="mx-auto font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r border-l border-r border-indigo-400">Level 1</button>
                        <button onclick="PostLedLevel({{this.mote_id}}, 2)" class="mx-auto font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r border-l border-r border-indigo-400">Level 2</button>
                        <button onclick="PostLedLevel({{this.mote_id}}, 3)" class="mx-auto font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r border-l border-r border-indigo-400">Level 3</button>
                        <button onclick="PostLedMode({{this.mote_id}}, 1)" class="mx-auto font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r border-l border-indigo-400">Automatic</button>
                        <button onclick="PostLedMode({{this.mote_id}}, 0)" class="mx-auto font-bold text-gray-800 bg-indigo-200 px-5 py-2 hover:bg-indigo-400 rounded-r border-l border-indigo-400">Manual</button>
                    </div>
                {{/each}}
            </div>
        </div>
    </div>
</section>
<script src="{{scriptUrl}}"></script>
<script>
    loadPlayer({
        url: "ws://" + location.host + "/api/stream",
        canvas: document.getElementById('cameraSurveillance'),
    });

    let currentSuggestionsPage = 0;
    const suggestionsTableBody = document.getElementById('suggestionsTableBody');
    const currentSuggestionsPageField = document.getElementById('currentSuggestionsPageField');

    function nextSuggestionsPage() {
        currentSuggestionsPage++;
        currentSuggestionsPageField.innerHTML = currentSuggestionsPage;
        loadSuggestionPage(currentSuggestionsPage);
    }

    function prevSuggestionsPage() {
        if (currentSuggestionsPage !== 0) {
            currentSuggestionsPage--;
        }
        currentSuggestionsPageField.innerHTML = currentSuggestionsPage;
        loadSuggestionPage(currentSuggestionsPage);
    }

    function refreshSuggestionsPage() {
        currentSuggestionsPageField.innerHTML = currentSuggestionsPage;
        loadSuggestionPage(currentSuggestionsPage);
    }

    function loadSuggestionPage(page) {
        fetch(`/api/suggestions?page=${page}`, {
                method: "GET",
                credentials: "include"
            })
            .then((resp) => resp.json())
            .then((list) => {
                suggestionsTableBody.textContent = "";
                for (suggestion of list) {
                    //console.log(suggestion);
                    suggestionsTableBody.insertAdjacentHTML('beforeend', `
                        <tr class="hover:bg-gray-100">
                            <td class="py-4 px-6 border-b font-bold">${suggestion.id}</td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${suggestion.username}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${suggestion.suggestion}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800 font-bold py-1 px-3 rounded">${suggestion.rating}/10</p>
                            </td>
                        </tr>
                    `);
                }
            });
    }

    let currentRecordsPage = 0;
    const recordsTableBody = document.getElementById('recordsTableBody');
    const currentRecordsPageField = document.getElementById('currentRecordsPageField');

    function nextRecordsPage() {
        currentRecordsPage++;
        currentRecordsPageField.innerHTML = currentRecordsPage;
        loadRecordPage(currentRecordsPage);
    }

    function prevRecordsPage() {
        if (currentRecordsPage !== 0) {
            currentRecordsPage--;
        }
        currentRecordsPageField.innerHTML = currentRecordsPage;
        loadRecordPage(currentRecordsPage);
    }

    function refreshRecordsPage() {
        currentRecordsPageField.innerHTML = currentRecordsPage;
        loadRecordPage(currentRecordsPage);
    }

    function loadRecordPage(page) {
        fetch(`/api/records?page=${page}`, {
                method: "GET",
                credentials: "include"
            })
            .then((resp) => resp.json())
            .then((list) => {
                recordsTableBody.textContent = "";
                for (record of list) {
                    recordsTableBody.insertAdjacentHTML('beforeend', `
                        <tr class="hover:bg-gray-100">
                            <td class="py-4 px-6 border-b font-bold">${record.id}</td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${record.mote_id}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${new Date(Date.parse(record.timestamp))}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${record.light}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${record.temperature}</p>
                            </td>
                            <td class="py-4 px-6 border-b ">
                                <p class="text-grey-800  py-1 px-3 rounded text-sm">${record.ledlevel}</p>
                            </td>
                        </tr>
                    `);
                }
            });
    }

    function PostLedLevel(moteId, level){
        fetch(`/api/ledlevel`, {
            method: 'POST', 
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }, 
            body: JSON.stringify({
                mote_id: moteId,
                level: level
            }),
        }).then((resp) => console.log(resp.msg));
    }

    function PostLedMode(moteId, mode){
        fetch(`/api/ledlevel`, {
            method: 'POST', 
            credentials: 'include',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }, 
            body: JSON.stringify({
                mote_id: moteId,
                mode: mode,
            }),
        }).then((resp) => console.log(resp.msg));
    }


</script>